import React, { useEffect, useState } from "react";
import { useNavigate } from "react-router-dom";
import { Button } from "@/shared/ui/button";
import { cn } from "@/shared/lib/cn";
import { useTranslation } from "react-i18next";
import { getLang } from "@/shared/lib/getLang.ts";
import i18n from "@/shared/i18n";
import { useQueryClient } from "@tanstack/react-query";

const ukSuccessDescription = `
<p>–í–∞—à –ø–ª–∞—Ç—ñ–∂ —É—Å–ø—ñ—à–Ω–æ –æ–±—Ä–æ–±–ª–µ–Ω–æ.</p>
<br />
<p>üì© –©–æ –¥–∞–ª—ñ?</p>
<ul>
  <li>
    –ú–∏ –≤—ñ–¥–ø—Ä–∞–≤–∏–ª–∏ –≤–∞—à —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π –∫–æ–¥ —É—á–∞—Å–Ω–∏–∫–∞ –æ–ª—ñ–º–ø—ñ–∞–¥–∏ –Ω–∞ –≤–∞—à—É
    —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É –ø–æ—à—Ç—É.
  </li>
  <li>
    –Ø–∫—â–æ —É –≤–∞—Å –≤–∏–Ω–∏–∫–ª–∏ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è, –∑–≤'—è–∂—ñ—Ç—å—Å—è –∑ –Ω–∞–º–∏:
    [office@space-memory.com]
  </li>
</ul>
<br />
<p>üéØ –ì–æ—Ç–æ–≤—ñ –∫ –∑–º–∞–≥–∞–Ω–Ω—è?</p>
<p>–ü–µ—Ä–µ–π–¥—ñ—Ç—å –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É –æ–ª—ñ–º–ø—ñ–∞–¥–∏, —â–æ–± –ø–æ—á–∞—Ç–∏ —Ç—Ä–µ–Ω—É–≤–∞—Ç–∏—Å—è</p>
`;

const ukErrorDescription = `
<p>–ù–∞ –∂–∞–ª—å, –≤–∞—à—É –æ–ø–ª–∞—Ç—É –Ω–µ –≤–¥–∞–ª–æ—Å—è –æ–±—Ä–æ–±–∏—Ç–∏. –ë—É–¥—å –ª–∞—Å–∫–∞, —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.
–Ø–∫—â–æ –ø—Ä–æ–±–ª–µ–º–∞ –ø–æ–≤—Ç–æ—Ä—é—î—Ç—å—Å—è, –∑–≤‚Äô—è–∂—ñ—Ç—å—Å—è –∑ –Ω–∞—à–æ—é —Å–ª—É–∂–±–æ—é –ø—ñ–¥—Ç—Ä–∏–º–∫–∏:</p>
<br />
<p>üìû (+48) 733 805 610</p>
<p>üìß office@space-memory.com</p>
<br />
<p>–î—è–∫—É—î–º–æ –∑–∞ –≤–∞—à–µ —Ç–µ—Ä–ø—ñ–Ω–Ω—è!</p>
`;

const ukPendingDescription = `
<p>–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞—á–µ–∫–∞–π—Ç–µ. –û–ø–µ—Ä–∞—Ü—ñ—è –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è, —Ü–µ –º–æ–∂–µ –∑–∞–π–Ω—è—Ç–∏ –∫—ñ–ª—å–∫–∞ —Å–µ–∫—É–Ω–¥.
–ù–µ –∑–∞–∫—Ä–∏–≤–∞–π—Ç–µ —Å—Ç–æ—Ä—ñ–Ω–∫—É –π –Ω–µ –æ–Ω–æ–≤–ª—é–π—Ç–µ —ó—ó, –ø–æ–∫–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—è –Ω–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å—Å—è.</p>
<br />
<p>–î—è–∫—É—î–º–æ –∑–∞ —Ç–µ—Ä–ø—ñ–Ω–Ω—è! üíô</p>
<br />
<p>‚ùì –Ø–∫—â–æ —É –≤–∞—Å –≤–∏–Ω–∏–∫–Ω—É—Ç—å –∑–∞–ø–∏—Ç–∞–Ω–Ω—è —â–æ–¥–æ –æ–ø–ª–∞—Ç–∏, –Ω–∞–ø–∏—à—ñ—Ç—å –Ω–∞–º:</p>
<p>üìß office@space-memory.com</p>
`;

const plSuccessDescription = `
<p>Twoja p≈Çatno≈õƒá zosta≈Ça pomy≈õlnie przetworzona.</p>
<br />
<p>üì© Co dalej?</p>
<ul>
  <li>
    Wys≈Çali≈õmy Tw√≥j unikalny kod uczestnika olimpiady na podany adres e-mail.
  </li>
  <li>
    Masz pytania? Skontaktuj siƒô z nami: [office@space-memory.com].
  </li>
</ul>
<br />
<p>üéØ Gotowy do rywalizacji?</p>
<p>Przejd≈∫ na stronƒô olimpiady, aby rozpoczƒÖƒá przygotowania.</p>
`;

const plErrorDescription = `
<p>Niestety, Twoja p≈Çatno≈õƒá nie zosta≈Ça przetworzona. Prosimy, spr√≥buj ponownie.
Je≈õli problem siƒô powt√≥rzy, skontaktuj siƒô z naszym zespo≈Çem wsparcia:</p>
<br />
<p>üìû (+48) 733 805 610</p>
<p>üìß office@space-memory.com</p>
<br />
<p>Dziƒôkujemy za cierpliwo≈õƒá!</p>
`;

const plPendingDescription = `
<p>Prosimy o chwilƒô cierpliwo≈õci. Operacja jest w toku i mo≈ºe potrwaƒá kilka sekund.
Nie zamykaj ani nie od≈õwie≈ºaj strony, dop√≥ki transakcja siƒô nie zako≈Ñczy.</p>
<br />
<p>Dziƒôkujemy za cierpliwo≈õƒá! üíô</p>
<br />
<p>‚ùì Masz pytania dotyczƒÖce p≈Çatno≈õci? Skontaktuj siƒô z nami:</p>
<p>üìß office@space-memory.com</p>
`;

const statusData = {
  success: {
    title: i18n.t("paymentStatus.success.title"),
    description: {
      uk: ukSuccessDescription,
      pl: plSuccessDescription
    },
  },
  error: {
    title: i18n.t("paymentStatus.error.title"),
    description: {
      uk: ukErrorDescription,
      pl: plErrorDescription
    },
  },
  pending: {
    title: i18n.t("paymentStatus.pending.title"),
    description: {
      uk: ukPendingDescription,
      pl: plPendingDescription
    },
  },
};

type PaymentStatus = "success" | "error" | "pending";

export const PaymentStatusPage: React.FC = () => {
  const navigate = useNavigate();
  const lang = getLang();
  const { t } = useTranslation();

  const queryClient = useQueryClient();

  const [statusType, setStatusType] = useState<PaymentStatus>("pending")

  const content = statusData[statusType];
  const description = content.description[lang];

  const handleAccept = () => {
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º–æ –¥–æ —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –æ–ª—ñ–º–ø—ñ–∞–¥–∏
    queryClient.invalidateQueries({queryKey: ['olympiad']})
    navigate("..", { replace: true });
  };

  useEffect(() => {
    const timeoutId = setTimeout(() => {
      setStatusType("success")
    }, 3000);
    return () => clearTimeout(timeoutId);
  }, []);
  return (
    <div className="flex w-full flex-col items-center gap-10">
      <div
        className={cn(
          "mt-10 w-full rounded-xl bg-gradient-to-t from-[#082536] to-[#193C4D] px-4 pb-12 pt-8 shadow-[-1px_-1px_1px_-0px_#657E8A]",
          "md:mt-20 md:max-w-[1286px] md:rounded-3xl md:px-16 md:pb-24 md:pt-16",
        )}
      >
        <div className="mb-6 md:mb-10">
          <h2 className="text-xl font-bold md:px-4 md:text-3xl">
            {content.title}
          </h2>
        </div>
        <div
          className="rounded-xl bg-[--color-5] p-4 text-sm text-[--color-placeholder] md:rounded-3xl md:text-base"
          dangerouslySetInnerHTML={{
            __html: description ?? "",
          }}
        ></div>
      </div>
      <div className="w-full max-w-[1286px] md:p-4">
        {statusType === "success" && (
          <Button
            className="w-full text-base md:w-auto lg:px-8 lg:py-3 lg:text-base"
            onClick={handleAccept}
          >
            {t("paymentStatus.goToOlympiad")}
          </Button>
        )}
      </div>
    </div>
  );
};
